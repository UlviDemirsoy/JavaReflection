version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:7.0
    container_name: acegames-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: acegames
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - acegames-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Service
  backend:
    build:
      context: ./acegames-backend
      dockerfile: Dockerfile
    container_name: acegames-backend
    restart: unless-stopped
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://admin:password@mongodb:27017/acegames?authSource=admin
      SPRING_DATA_MONGODB_DATABASE: acegames
      APP_SCHEMA_REGISTRATION_ENABLED: "true"
      APP_SCHEMA_REGISTRATION_CLASSES: "Skin,PurchaseProduct,Offer,Cascade,Tile"
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - acegames-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Service
  frontend:
    build:
      context: ./acegamesfrontend
      dockerfile: Dockerfile
    container_name: acegames-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://localhost:8080/api
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - acegames-network

volumes:
  mongodb_data:
    driver: local

networks:
  acegames-network:
    driver: bridge 